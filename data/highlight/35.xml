<?xml version="1.0" encoding="UTF-8"?>
<publication marker= "yu miao">
    <journal>International Journal of Information Management</journal>
    <time>Volume 36, Issue 1, February 2016, Pages 44-59</time>
International Journal of Information Management
    <title>Third-party mobile app developers’ continued participation in platform-centric ecosystems: An empirical investigation of two different mechanisms</title>
    <author>Hyung Jin Kim</author>. Author links open the author workspace.Opens the author workspacea. Numbers and letters correspond to the affiliation list. Click to expose these in author workspace
    <author>Inchan Kim</author>. Author links open the author workspace.Opens the author workspaceb. Numbers and letters correspond to the affiliation list. Click to expose these in author workspace
    <author>Hogeun Lee</author>. Author links open the author workspace.Opens the author workspaceOpens the author workspacea. Numbers and letters correspond to the affiliation list. Click to expose these in author workspace
a
School of Business, Yonsei University 50 Yonsei-ro, Seodaemun-gu, Seoul 120-749, South Korea
b
Jon M. Huntsman School of Business, Utah State University, 3515 Old Main Hill, Logan, UT 84322-3515, USA
Show more
    <doi>https://doi.org/10.1016/j.ijinfomgt.2015.09.002</doi>Get rights and content
Highlights
•
    <highlight id="1">A dual model explains third-party developers' continued participation in a platform.</highlight>
•
    <highlight id="2">Two contrasting mechanisms in long-term exchanges were used for theoretical framework.</highlight>
•
    <highlight id="3">One mechanism escalates dedication to a platform while the other constraining to it.</highlight>
•
    <highlight id="4">Factors from the two mechanisms clarify why app developers remain in Apple's platform.</highlight>

Abstract
    <abstract>  <![CDATA[Platform-centric ecosystems run by Apple, Google, Microsoft, etc. enable the companies to magnify the values of their products and services on an unprecedented scale, by harnessing third-party add-on software such as mobile apps. Despite the importance, however, there is a dearth of empirical research that investigates how third-party developers’ continued participation is actually determined. This paper examined two different mechanisms increasing dedication to a platform and constraining exit from the platform, respectively. Specific factors in each mechanism and their casual relationships were tested and discussed in the context of Apple’s mobile platform.]]> </abstract>

Keywords
        <keywords>Platform-centric ecosystems</keywords>
        <keywords>Third-party developers</keywords>
        <keywords>App store</keywords>
        <keywords>Mobile apps</keywords>
        <keywords>Dual model</keywords>

        <section name="Introduction" category="introduction">
            <![CDATA[
1. Introduction
In recent years, exploitation of outside expertise and ingenuity in software development and software-based services has remarkably increased. For example, in July 2008, Apple opened its software platform to the public and launched its online application distribution system: the App Store. This strategic maneuver made it possible for third-party developers to create mobile apps and to profit by selling on the App Store. Participation of third-party developers in the platform-based ecosystem has created great value for Apple product users in terms of the variety of useful, enjoyable, continuously updated mobile apps. As of January 2015, over 1.4 million apps were available on the App Store (Ranger, 2015). This unprecedented success has translated into a significant increase in sales of Apple products and prompted other rival companies to take similar steps to provide mobile apps made by third-party developers (Kimbler, 2010; Kim et al., 2010). For instance, Google Play was launched in 2012, followed by Google’s various strategies to enrich Android apps. To promote app development by third-party developers, Google once organized a $10-million-award Android Developer Challenge, for example. In its app race with Apple, the Google Play app store has recently reached over 1.43 million apps published (Ranger, 2015).
Central to this new trend is the shift away from the conventional notion of firm boundaries toward a platform-centric ecosystem in which a platform owner (often the hardware product manufacturer)1 and third-party developers are interconnected and play respective roles to create competitive barriers together. In the context of software development, a platform indicates the extensible code base of a software-based system that provides core functionality used by various modules that interoperate with it. The modules are often provided by third-party developers, constitute an add-on software subsystem with special connections to the platform, and add new capabilities unforeseeable by the platform’s original designers (Tiwana, Konsynski, & Bush, 2010). For example, Apple’s iOS platform provides fundamental functionality common to a variety of mobile apps created by third-party developers, and the mobile apps (i.e., modules) add new capabilities to Apple products such as the iPhone and iPad. Likewise, in a platform-centric ecosystem, a symbiotic relationship exists between a platform and platform-specific software or modules produced by third-party developers (Cusumano & Gawer, 2002).
From a network perspective, a platform-centric ecosystem can be understood as a multi-sided network in which more than two parties play distinctly different roles and provide each other with network benefits (Eisenmann, 2007). For example, Apple’s platform mediates between Apple product users and third-party developers; in this platform-mediated network, the supply side (i.e., third-party developers) offers goods or services (i.e., mobile apps) that the demand side (i.e., product users) may want. Therefore, from product users’ standpoint, on one hand, the platform’s network benefits increase when the number of developer participants increases because they provide new software. On the other hand, third-party developers find the platform-mediated network more attractive when the number of product users increases.
Hence, the fundamental reason why hardware product manufacturers such as handset vendors tend to build their own platforms and establish organic ecosystems with third-party developers is clear. Platform-centric ecosystems enable platform owners such as Apple and Google to attract new product users and retain existing users continuously through the software offerings provided by third-party developers. At the same time, their platform networks grow more attractive and appeal more to prospective third-party developers. For this virtuous circle, the participation of third-party developers is most essential.

However, in the mobile services domain, where platform-centric ecosystems for smart mobile devices have rapidly grown, scant effort has been made to better understand what leads to continued participation of third-party developers in a platform-centric ecosystem. In the current mobile industry, multiple platforms are competing with one another, trying to expand their own platform-centric ecosystems with a larger number of third-party developers. This is because the combination of a platform and third-party mobile apps is now a strong selling point for customers. Hence, competition is no longer product-based, but platform-based (Baldwin & Clark, 2000; Garud, Kumaraswamy, & Langlois, 2003). Moreover, the relationship between platform owners and platform-specific third-party developers is not the classical principal–agent relationship, because third-party developers are not hired to perform tasks specified by platform owners (Tiwana et al., 2010). Thus, continued participation of third-party mobile app developers in a platform ecosystem will be based on their exchange relationships with the platform owner such as Apple and Google.
In this study, we argue that platform owners must understand the exchange relationships from third-party developers’ point of view in order to retain the services of these outside partners. Our empirical study investigates the factors that lead third-party mobile app developers to continue affiliation with a particular platform (i.e., continued participation), by focusing on the characteristics of the exchange relationship between the two parties (i.e., platform owners and third-party developers).

]]><h target="1" match="part">To ensure a systematic understanding of the issues involved in the continued participation of third-party developers, we used a dual model framework in which relationship continuance is predicted by two contrasting forces, in this case, dedication and constraints </h><![CDATA[(Kim & Son, 2009). ]]><h target="2" match="part">In our dual model, two different mechanisms affect continuation of the exchange relationship between third-party developers and platform owners. </h><![CDATA[On the one hand, the developers continue to participate in a platform-centric ecosystem established by a particular platform owner, because they genuinely desire to do so for some reason. This is known as a dedication-based mechanism. On the other hand, they also continue the relationship because they need to do so for other reasons; this is a constraint-based mechanism at work. Drawing upon theories developed in previous studies, we identified a set of key factors underlying these two mechanisms, and empirically investigated their causal relationships to understand how third-party mobile app developers’ continued participation is actually determined.]]>
</section>

        <section name="Literature review" category="background">
            <![CDATA[
2. Literature review
2.1. Existing research in the field of mobile phones and services
Mobile phones and related services have been the center of significant streams of IS research. Above all, there is ample research that examines users’ adoption of mobile innovations such as mobile data services, mobile Internet, and mobile TVs. For example, Hong and Tam (2006) developed and tested a model of mobile data services adoption. Venkatesh, Thong, and Xu (2012) extended the unified theory of acceptance and use of technology (UTAUT) to study acceptance and use of mobile technology (i.e., mobile Internet). In the context of mobile TV adoption, Arbore, Soscia, and Bagozzi (2014) investigated symbolic dimensions of adoption by considering self-concepts such as self-identity.
The adoption research also spreads out to the area of mobile commerce. In their extensive review of existing literature, Slade, Williams, and Dwivedi (2014) found that 73 studies had been published regarding m-payment or m-banking adoption. For example, Riquelme and Rios (2010) surveyed Singaporean consumers and concluded that perceived usefulness, social norms, and risk are the main factors influencing the intention to adopt mobile banking. According to a recent analysis (Kourouthanassis & Giaglis, 2012), adoption behavior studies have been most preferred by m-commerce researchers, although in the early days of m-commerce research (i.e., before 2006), strategy and economics were the main subjects.
Moreover, ever since smart mobile devices such as smartphones became a widespread and effective personal technology, mobile applications research has increasingly attracted the interest of IS researchers. In this so-called “m-app era”, we have witnessed a tremendous market opportunity, for which large global players are competing with each other furiously (Kourouthanassis & Giaglis, 2012). Apple, Google and Microsoft developed device and platform innovations that managed to attract and satisfy a large number of consumers with various forms of mobile applications. Our literature review suggests that the extant studies investigating mobile applications and related practices can be classified into three sub-categories in terms of whether their perspectives are relatively consumer-, developer-, or platform provider-oriented.
Firstly, scholars have investigated what leads to consumers’ continued use of mobile applications and how to increase mobile application stickiness. For this line of research, consumers’ view is critical because several industry reports indicate that consumers do not use most apps after the first 3 weeks of download (Furner, Racherla, & Babb, 2014), and that only 30% of paid apps in Apple’s App Store are used the day after they are purchased (Yardley, 2009). Furner, Racherla, and Babb (2014) developed a conceptual framework to examine how various app features can eventually increase mobile application stickiness of the users. Providing a comprehensive view on mobile application usability, Hoehle and Venkatesh (2015) theoretically clarified the degree to which a mobile application can be used by specified users for their specified goals with effectiveness, efficiency, and satisfaction.
Secondly, another group of mobile application research is fairly developer-oriented. For example, analyzing a large-scale panel data of 711 mobile apps, Liu, Au, and Choi (2014) found that the freemium strategy (i.e., offering apps for free initially, then charging for advanced features later) contributed positively to an increase in sales of paid mobile apps. Their findings further suggest that offering a free trial version can improve the visibility of a mobile app, but offering a quality free app is more important for a sales increase. In addition to sales, apps’ survival has also been another main interest for developers. For example, Lee and Raghu (2014) empirically investigated apps’ survival and found that developers’ app portfolio management, such as broadening app offerings across multiple categories, was a key determinant that increased the probability of survival in the top 300 chart in Apple’s App Store. Focusing on the mobile apps market, Holzer and Ondrus (2011) also provided an understanding of what the recent structural changes in the market actually mean to developers, in terms of access to customers, development and distribution costs, and freedom in development.
Lastly, an alternative line of the research has shown considerable interests in understanding platform owners’ relative advantages and strategies. For example, Hammershøj, Sapuppo, Tadayoni (2010) provided a comparison of mobile OS platforms in terms of several criteria such as openness, industry and community support, web integration, and look and feel. In their qualitative study, Ghazawneh and Henfridsson (2010) explained how boundary resources of platform owners such as software development kits can allow them to simultaneously maintain platform control and stimulate third-party development.
Based on the literature, our study intends to provide a deep understanding of the mobile apps market by investigating how third-party developers’ continued participation in a platform-centric ecosystem is determined. Our literature review suggests that despite the growing popularity of mobile applications research, platform owners’ theoretical understanding of how to effectively retain the developers to their own platform is still lacking. Accordingly, our study theoretically investigates the factors and mechanisms that affect continued participation of third-party developers. In the following section, we will discuss why the developers’ choice of a platform partner is a strategic decision, and then will explain relevant theoretical underpinnings of our study.

2.2. Mobile platforms along with third-party applications
The worldwide shipments of smartphones have surpassed 1 billion units in 2013, comprising a 55% share of the mobile phone market (IDC, 2013b). As a computer program designed to run on the smart devices, mobile apps provide users with numerous functionalities. The strategic importance of mobile apps has tremendously grown, as users increasingly seek out mobile apps to fulfill what they want on their mobile devices. Moreover, app availability and quality in a mobile platform affect consumers’ device purchase decisions as much as other well-known factors (e.g., price and service plan).
Importantly, the degree to which a mobile platform can retain a variety of applications depends on whether or not individual third-party developers consider that platform for publication. Some developers may prefer Google’s platform to Apple’s, because quality validation by the platform owner is not required. However, other developers may prefer Apple’s platform more, because they do not have to perform exhaustive tests and cross-version validations. Since Android is not a proprietary OS, device makers usually customize it to differentiate their products. Accordingly, it can be costly for app developers to test if their apps work well on all the devices. In either case, third-party developers may bear the disadvantages of a respective platform, based on a cost-benefit analysis, because it is much more difficult for them to reach a large user base without affiliating with a platform. Hence, the participation of third-party developers in a platform-based ecosystem is analogous to an organization’s decision to establish a strategic alliance with other companies.
In the following section, the notion of interorganizational exchange is discussed for a better understanding of the mutually beneficial connection between a platform and third-party developers. We will then explain the participation of third-party developers in a platform-based ecosystem from the business exchange perspective.
2.3. Interorganizational exchange
Companies are not always able to possess or access all necessary resources and means for attaining their business objectives. In order to address this insufficiency, they often develop and maintain exchange relationships with one another (Palmatier, Dant, Grewal, & Evans, 2006). For example, the needs for information, expertise, a sufficient number of customers, and entry into different markets are often more efficiently fulfilled through exchanges with industry partners. Interorganizational exchanges involve voluntary activity and transactions between two organizations to share resources and means for the achievement of their respective goals (Levine & White, 1961).
Several theoretical explanations have been offered to understand what leads to successful interorganizational exchange. The theoretical perspectives of prior studies include the commitment–trust, dependence, transaction cost economics, and relational norms perspectives (Palmatier, Dant, & Grewal, 2007). The commitment–trust perspective focuses on the role of a party’s commitment and trust to its exchange partner, because the two factors strongly affect exchange outcomes (Morgan & Hunt, 1994). Studies written from the dependence perspective primarily discuss the structure of the relationship between exchange parties (e.g., interdependence, dependence asymmetry), and investigate how the structural factors affect the interactions between the parties, and exchange performance (Gundlach & Cadotte, 1994; Hibbard, Brunel, Dant, & Iacobucci, 2001). Transaction cost economics theory states that the ultimate performance of an exchange is primarily influenced by relationship-specific investments and opportunistic behaviors of exchange parties (Heide & John, 1990; Noordewier, John, & Nevin, 1990; Williamson, 1975). Lastly, the relational norms perspective explains that relational norms, such as solidarity and conflict harmonization, affect the behavior and performance of exchange parties (Cannon, Achrol, & Gundlach, 2000; Kaufmann & Dant, 1992; Siguaw, Simpson, & Baker, 1998).
These theoretical perspectives shed light on several important aspects of successful interorganizational exchange. Accordingly, many scholars have taken multiple perspectives into account in order to better understand exchange relationships between two parties (e.g., (Ganesan, 1994; Siguaw et al., 1998). For example, in the context of the vendor–retailer exchange relationship, Ganesan (1994) argued that in addition to dependence, trust is also an important determinant for a long-term orientation of the two parties. Earlier studies on the channel relationships had focused on the effect of dependence mainly (e.g., Anderson & Narus, 1990). However, Ganesan (1994) pointed out that the dependence perspective primarily explained a party’s long-term orientation as motivated by the need to continue the channel relationship (i.e., constraint-based), but not by a genuine willingness to do that (i.e., dedication-based). Hence, Ganesan (1994) considered the effect of trust (i.e., relational perspectives) together with the role of dependence, providing a deeper understanding of continued interorganizational exchanges.
The combination of multiple theoretical perspectives is also found in more recent studies to provide a consolidated theoretical view of long-lasting interorganizational exchange relationships. For example, Palmatier et al. (2006) reviewed prior empirical studies written from the aforementioned theoretical perspectives, synthesizing the causal relationships among focal constructs into a meta-analytic framework. This framework includes several key factors of the major theoretical perspectives, and classifies them into different categories in a nomological net consisting of antecedents, mediators, and exchange outcomes. In the framework, strategy-related factors such as relationship benefits and relationship-specific investments are found to affect exchange outcomes such as relationship continuity and business performance, through affective relational factors such as relationship satisfaction.
Based on the literature, we initially identified the important factors that may influence third-party application developers to continue affiliation with a platform. We then aligned those factors in a dual model, categorizing them as either dedication-based or constraint-based. The dual model framework has been used in many previous studies to explicate the factors affecting continued exchange relationships. The literature on relationship continuance and dual model framework is discussed below.

2.4. Dedication- and constraint-based relationship continuance
In the dual model framework, two different motivations are the main drivers of relationship continuance: (1) one party’s dedication to an exchange partner or relationship, and (2) the constraints that make it difficult for the party to end the exchange relationship (Bendapudi & Berry, 1997; Kim & Son, 2009). In situations where the former is observed, a genuine desire exists to continue the exchange relationship because the exchange is deemed to offer value, while in the latter case, the exchange relationship continues because of locked-in investments. The literature has suggested that these two contrasting forces coexist in a continued exchange relationship, exhibiting an active or passive form of relationship continuance, respectively. It is also noted that the dedication- and constraint-based mechanisms are distinct from each other in terms of their antecedents, affective intervening variables, and behavioral outcome variables (Kim & Son, 2009).
The driving forces of dedication-based relationship continuance are the benefits or values realized through the exchange relationship (Bendapudi & Berry, 1997). The current benefits not only affect affective state such as satisfaction but also provide information from which the future value of the relationship can be inferred, thereby likely influencing the intention to continue the exchange relationship (Kim & Son, 2009; Morgan & Hunt, 1994). Prior studies have found that repeated use and advocacy behavior are the main characteristics of this active form of relationship continuance (Bendapudi & Berry, 1997; Kim & Son, 2009).
In contrast, constraint-based relationship continuance is driven by economic, social, or psychological investments that have been made only to a certain relationship (Johnson, 1982). Relationship-specific investment makes an investing party anticipate termination cost, which refers to perceived potential losses that would result from ending the relationship (Friman, Gärling, Millett, Mattsson, & Johnston, 2002; Kim & Son, 2009; Morgan & Hunt, 1994). To avoid the potential losses, the investing party engages in a passive form of relationship continuance, which is characterized by acquiescence and inattentiveness to alternatives (Bendapudi & Berry, 1997; Kim & Son, 2009).
The dual model framework posits that continued relationships are essentially caused by these two mechanisms. In the framework, importantly, the dedication- and constraint-based mechanisms simultaneously, yet differentially, determine the course of an ongoing relationship between different parties. Hence, a better understanding can be yielded by the dual model framework about why a relationship continues (e.g., continued participation), compared to when a single perspective is used only.

This dual model framework has been employed in many prior studies to understand various kinds of relationships, such as interpersonal relationships (Stanley & Markman, 1992), employee–firm relationships (Dunham, Grube, & Castañeda, 1994), and customer–firm relationships (Bendapudi & Berry, 1997; Kim & Son, 2009). For example, Kim and Son (2009) used the dual model framework to better understand why people continue to use online services (i.e., portal websites) at the post-adoption stage. That study found that the dedication-based mechanism increased intention to use an incumbent portal website, whereas the constraint-based mechanism increased inattentiveness to alternative portals.]]>
</section>

        <section name="Dual model of third-party developers’ continued participation" category="research model and hypotheses">
            <![CDATA[
3. Dual model of third-party developers’ continued participation
In this study, we propose a dual model that predicts continued participation of third-party mobile app developers in a platform-centric ecosystem. The model shown in Fig. 1 portrays both dedication- and constraint-based mechanisms, each of which consists of antecedents, affective intervening variables, and behavioral outcome variables. The factors were drawn from the literature on interorganizational exchange and then were aligned in the model according to their relevance to one of the two mechanisms.
Dual model of third-party developers’ continued participation in a…
Download full-size image
Fig. 1. Dual model of third-party developers’ continued participation in a platform-centric ecosystem.
3.1. Dedication-based mechanism
Prior studies suggested that perceived benefit is an important factor that influences a party’s dedication to an exchange relationship. Depending on the levels of benefit from the exchange, the party values the exchange relationship more or less (Morgan & Hunt, 1994; Reynolds & Beatty, 1999); moreover, the party infers the future value of the extant relationship on the basis of current benefits (Kim & Son, 2009). Hence, if current benefits are greater, the party’s dedication to the exchange relationship may increase more. Morgan (2000) classified relationship contents as economic, resource, or social. Accordingly, we derived three categories of benefit that third-party application developers could receive from the exchange relationship with a platform owner. Specific benefit factors are discussed below and relevant hypotheses are presented.
3.1.1. The effect of revenue sharing attractiveness on relationship satisfaction
According to Morgan (2000), the economic aspect of a relationship are associated with financial benefits that exchange parties can draw from the relationship. Prior studies suggested that economic benefits, such as increased revenues, affect continuance of the relationship, because economic incentives are critical to a party’s goal attainment, thereby affecting its assessment of the relationship (Morgan, 2000). For example, when a great deal of monetary gains are generated from an exchange, the party is likely to value the relationship more, which in turn may increase favorable affective responses such as relationship satisfaction (Ellegaard, Johansen, & Drejer, 2003; Harris, O’Malley, & Patterson, 2003; Morgan, 2000; Palmatier et al., 2006). Satisfaction with a relationship is a favorable affective state that results from an appraisal of the relationship (Anderson & Narus, 1984, 1990). Prior studies have explained that factors enhancing a business partner’s performance, such as product/service offering, pricing, and logistics management, can increase the partner’s relationship satisfaction (Schellhase, Hardock, & Ohlwein, 2000).
In our model, revenue sharing attractiveness represents the economic benefits that third-party application developers may obtain from an exchange with a platform owner. Revenue sharing attractiveness indicates the degree to which third-party developers favor a platform owner’s revenue share model, which defines how the revenue from app sales is distributed between the two parties. Revenue share model has been identified as a significant and effective strategy to entice third-party developers to a given platform and satisfy them (Gonςalvess, Walravens, & Ballon, 2010; Kimbler, 2010), because it is directly related to the levels of economic benefit for third-party developers. For example, Apple retains 30 percent of the profits generated from app sales, and 70% goes to third-party developers. Moreover, according to the justice theory, exchange parties are usually attentive to how fairly the outcomes such as revenues are allocated between them and whether or not the amount of their own gains is in proportion to their own input (Ashworth & Free, 2006). Hence, we predict that in a platform owner—application developer exchange, if the revenue share model of the platform owner secures a reasonable amount of economic gain for third-party developers, the developers’ satisfaction will increase.
H1

Revenue sharing attractiveness has a positive effect on relationship satisfaction of third-party mobile app developers.


3.1.2. The effect of market demand on relationship satisfaction
Prior studies have explained that demand growth can lead to increased economic returns for a company (Nakao, 1980). Market demand, which is the sum of individual demand for a product, increases with the number of buyers who are able and willing to buy (Nicholson & Snyder, 2007). Recently, the number of consumers who consider important the availability of mobile apps has overall increased (Kimbler, 2010). The increased market demand for mobile apps is considered an important source of financial gains for third-party application developers.
Mobile platforms provide the opportunity for third-party developers to make their apps accessible to a large number of potential users. The huge exposure of mobile apps can draw an extensive market demand for the apps, which in turn may result in actual purchase. According to IDC (2013a,b), annual mobile apps downloads on smart devices will increase from $87.8 billion in 2013 to $187 billion in 2017. In fact, millions of mobile apps are downloaded daily on Apple’s platform. Although paid apps on Apple’s platform are priced low on average, significant revenue is actually generated from app sales due to the high demand (Kimbler, 2010). However, the levels of market demand for mobile apps may not be the same across different platforms, because the network size of each platform is different and average app quality is dissimilar. Hence, high market demand of platform-specific applications may increase the value third-party developers place on their participation in a respective platform ecosystem. As a result, their satisfaction with the exchange relationship with the platform owner may increase (Geyskens, Steenkamp, & Kumar, 1999). Prior studies have found that a business partner’s relationship satisfaction is influenced by instrumental factors (e.g., product/service offering), which relate to the partner’s business performance (Schellhase et al., 2000). Hence, we anticipate that:
H2

Market demand has a positive effect on relationship satisfaction of third-party mobile app developers.


3.1.3. The effect of usefulness of development tools on relationship satisfaction
Prior studies have mentioned that a party’s relationship commitment increases when an exchange partner’s resources complement the party’s own resources or capabilities, thereby further facilitating goal attainment (Buckley & Casson, 1988). Specifically, it is noted that a party’s access to useful resources of an exchange partner can increase satisfaction with the exchange relationship, and the relationship will last longer than other relationships in which such resource benefits are minimal (Buckley & Casson, 1988; Ellegaard et al., 2003; Harris et al., 2003; Morgan, 2000).
In a platform owner—application developer exchange, the platform owner usually offers software development tools (the so-called “software development kit”) to support app development. Software development is knowledge-intensive work that requires a wide range of expertise and techniques (Clegg et al., 1997). Providing a powerful integrated development environment, the tools may complement third-party developers’ limited resources such as technological skills, and help enhance their strengths such as app design ideas. Third-party developers with game design ideas, for instance, may be unfamiliar with Objective-C, a high-level object-oriented programming language used by Apple. Due to the lack of specific technological knowledge, it may be difficult for them to tailor their app contents and designs to the platform in the process of app development. To alleviate these problems, Apple provides development tools (e.g., Xcode and Interface Builder) as technological resources for third-party developers. These tools are equipped with useful functionalities, such as a user interface design builder, an analysis tool, and a simulator, which allow third-party developers to easily test and implement their app design ideas on the platform. Hence, the usefulness of development tools offered by the platform owner is likely to increase satisfaction of third-party developers. Many IS studies have consistently found that technological resources providing such instrumental benefits in facilitating tasks are perceived to be useful and increase user satisfaction (Bhattacherjee, 2001; Hong, Kang, & Lee, 2007).
H3

Usefulness of development tools has a positive effect on relationship satisfaction of third-party mobile app developers.


3.1.4. The effect of usefulness of online forums on relationship satisfaction
Software developers often get useful advice, assistance, and source code comments from other members in an online forum or community (Lee & Cole, 2003; Setia, Rajagopalan, Sambamurthy, & Calantone, 2012; Zhang, Hahn, & De, 2013). Online communities are generally open collectives of individuals with common interests and practices (Chiu, Hsu, & Wang, 2006; Sproull & Arriaga, 2007). The openness of the culture makes it possible for anyone to provide useful knowledge to the community (Faraj, Jarvenpaa, & Majchrzak, 2011; Setia et al., 2012). Especially, the culture of software developer communities has been described as similar to that of the scientific community (Bezroukov, 1999), which means that individual developers are voluntarily motivated to contribute useful knowledge to the community for their individual and collective welfare (Sproull & Arriaga, 2007). Accordingly, informational benefits from the community often remain high, positively affecting individual final outputs (Butler, Sproull, Kiesler, & Kraut, 2007). For example, Setia et al. (2012) found that software product quality was significantly improved as a result of access to the external support from other community members. This literature suggests that online forum or community provides critical informational resources that software developers can use.
The informational benefit of online forums may also hold in the context of mobile app development. Like other software development, the creation of mobile apps with idiosyncrasies particular to a platform is innately complex and requires various skills and knowledge pertinent to the platform’s system environment (Setia et al., 2012). Thus, some platform owners support or sponsor online forums in order to encourage interaction and collective intelligence among third-party developers. For example, Apple runs and supports a developer forum in which third-party developers can discuss a variety of challenges and seek advice from other developers. Obtaining useful knowledge from the forum (i.e., informational benefit) may increase the value of working with the particular platform, likely increasing the satisfaction of the developers. In this regard, we expect that in a platform owner—application developer exchange, the usefulness of online forums supported by the platform owner can positively influence the relationship satisfaction of third-party developers.
H4

Usefulness of online forums has a positive effect on relationship satisfaction of third-party mobile app developers.


3.1.5. The effect of review process fairness on relationship satisfaction
Prior studies suggest that cultural compatibility between partner firms, which relates to the social content in the relationship, such as organizational philosophy, values, and norms (Morgan, 2000), is an important precursor of favorable relationship outcomes (Parkhe, 1991; Sarkar, Echambodi, Cavusgil, & Aulakh, 2001). It is certainly beneficial for a party to exchange with a partner whose organizational culture is similar. This is because no major, unpleasant surprises such as conflicts will occur (Das & Teng 1998; Chung, Singh, & Lee, 2000). Moreover, the cultural similarity can facilitate a sense of unity and congeniality (Evans, 1963; Sarkar et al., 2001), thereby leading to favorable affective state.
Some platform owners such as Apple reject mobile apps produced by third-party developers in the process of app quality validation. Therefore, third-party developers look forward to normative behavior of the platform owner during the review process. If the platform owner establishes formal, objective standards and makes the quality validation clear, the developers are likely to judge the review process to be fair. Prior research states that fairness or justice is an important social norm by which exchange parties’ behavior is judged, and is a central concern in exchange relationships (Cialdini, 1993). Hence, the degree of fairness that third-party developers perceive in a review process may lead the developers to realize the extent to which the two parties follow similar social norms regarding the issues critical to the exchange. High similarity may reassure third-party developers that they will not experience unfavorable treatment from the platform owner (Rahim, Magner, & Shapiro, 2000), and also increase a sense of unity with and congeniality toward the platform owner. As a result, favorable affective responses such as relationship satisfaction may increase (Evans, 1963; Sarkar et al., 2001, Martinez-Tur, Peiro, Ramos, & Moliner, 2006; McFarlin & Sweeney, 1992). Hence, we argue that in a platform owner—application developer exchange, if the review process by the platform owner is perceived to be fair, relationship satisfaction of third-party application developers can increase.
H5

Review process fairness has a positive effect on relationship satisfaction of third-party mobile app developers.


3.1.6. The effect of relationship satisfaction on continued intention to develop apps on the platform
Prior studies have found that satisfaction has a positive impact on repeated use or purchase, which means relationship continuity increases with satisfaction (Cronin & Taylor 1992; Day, Denton, & Hickner, 1988; Fornell, 1992; Ganesan, 1994, Patterson, Johnson, & Spreng, 1997). For example, Patterson et al. (1997) examined business-to-business service satisfaction in the context of consultancy firms and their client firms. In that study, a positive link was found between satisfaction and repeated purchase intention. Moreover, satisfaction has been described as a post-consumption evaluation of a product or service, which affects future behavior such as repeated use (Bhattacherjee, 2001; Sharma & Patterson 2000). In an exchange relationship, satisfaction is likely to reduce perceived potential risk (Kaufman, Jayachandran, & Rose, 2006) and provides frequent positive reinforcement about the safety of continuing the exchange relationship (Hennig-Thurau, Gwinner, & Gremler, 2002). Hence, we propose that in a platform owner—application developer exchange, relationship satisfaction of third-party developers can increase their continued intention to develop apps on the platform.
H6

Relationship satisfaction has a positive effect on continued intention to develop apps on the platform.


3.2. Constraint-based mechanism
Many studies have established that relationship-specific investment is an important antecedent of constraint-based relationship continuance (Anderson & Narus, 1990; Anderson & Weitz, 1989, 1992; Heide & John, 1998; Kim & Son, 2009; Palmatier et al., 2006). Relationship-specific investments include both tangible (e.g., financial) and intangible (e.g., social and psychological) investments devoted to a particular relationship or transaction (Heide & John, 1998. By definition, relationship-specific investments cannot be easily transferred to or redeployed in other, alternative relationships (Heide & John, 1998; Williamson, 1981), creating constraints that make it difficult for an investing party to end the relationship. For example, in a channel relationship, a retailer is often required to make idiosyncratic investments such as implementing information systems for product ordering and inventory control and training salespeople to sell products supplied by a particular manufacturer (Ganesan, 1994). These investments constrain the retailer from terminating the exchange relationship with the vendor. Among several types of nontransferable investments examined in the literature, this paper primarily focuses on two: learning and setup activity. These two investments were selected based on their relevance to the exchange between platform owners and third-party application developers.
3.2.1. The effect of learning on termination costs
Learning is often required as an investment for participation in an exchange (Chen & Hitt, 2002; Jones, Motherbaugh, & Beatty, 2002; Klemperer, 1995; Subramani & Henderson, 1999). Exchange parties may need to spend a certain amount of time and effort to acquire new knowledge or expertise that is necessary in an exchange, but may be less applicable in other exchanges. Subramani and Henderson (1999) revealed that expert knowledge in some fields is a nontransferrable investment; specifically, they found that in a channel relationship, an apparel manufacturer’s accumulated expertise or knowledge about the fashion preferences of a specific retailer’s customers had limited applicability to other retailers. This means that learning performed for a particular exchange may be useless when the exchange relationship terminates. The more time and effort spent in acquiring certain knowledge relevant to an exchange, the higher the potential losses that would result from terminating the exchange relationship. The investing party’s perception of termination costs may be affected by this fact (Kang & Oh, 2009; Morgan & Hunt, 1994) and may increase feelings of being constrained in the exchange relationship (Morgan & Hunt, 1994).
In a platform owner—application developer exchange, the extent of learning performed for developing and having apps run on a particular platform may influence third-party developers’ perception of termination costs. In order to acquire the necessary skills and expertise to develop mobile apps specific to a particular platform, third-party developers must learn about the software environment of the specific platform, including relevant programming languages and system architecture, which may not be the same for other competitive platforms. In fact, the code bases of several competitive platforms in the mobile services domain differ from one another because different types of operating systems are used. Thus, if third-party developers put more effort into learning about a particular platform in order to develop apps, they may perceive a greater amount of potential losses that would result from leaving that platform. Hence, we argue that the extent of learning about the platform can positively affect third-party developers’ perception of termination costs.
H7

The extent of learning about the platform has a positive effect on third-party developers’ perception of termination costs.


3.2.2. The effect of setup activity on termination costs
It has been noted that the process of initiating or setting up an exchange relationship with a partner involves some necessary preparatory efforts, such as purchasing new industrial equipment, installing and configuring new systems, making a new work center ready for operation, or preparing contract documents (Guiltinan, 1989). These tangible and intangible investments are often relationship-specific and have little value outside the exchange relationship (Richardson, 1993). For example, a manufacturer’s production system often needs to be tailored to using the materials bought from a particular supplier (Heide & John, 1990). Moreover, certain formalities, such as addressing and detailing important aspects of the contract, are usually required for setting up an exchange relationship, which are surely particular to that exchange (Burnham, Frels, & Mahajan, 2003). These investments may be perceived as wasted when the exchange relationship terminates.
In a platform owner—application developer exchange, certain investments are necessary for third-party application developers to initiate exchange relationships with the platform owner. For example, third-party developers must have some technical assets (e.g., a Mac computer, iPhone, or iPad) in order to develop and test their apps on Apple’s platform. They also must pay an annual developer membership fee (e.g., $99 per year) for the privilege of having their apps distributed on the platform and for the support from the platform owner. These investments have little value on other platforms; they are specific to the exchange with Apple and would be useless when the exchange relationship terminates. Hence, we anticipate that in a platform owner—application developer exchange, the extent of setup activity can positively affect third-party developers’ perception of termination costs.
H8

The extent of setup activity has a positive effect on third-party developers’ perception of termination costs.


3.2.3. The effect of termination costs on dependence on the platform
Prior studies have suggested that dependence reflects a vulnerable party’s intention to maintain the extant exchange relationship, especially in a constrained situation (Heide & John, 1998). For example, the greater the sales and profits that the partner accounts for, the greater a party’s dependence on the partner (Heide & John, 1998; El-Ansary & Stern, 1972). This passive form of relationship continuance may also arise when termination costs are high, because high termination costs create barriers to exit from the exchange (Ganesan, 1994). Specifically, if the expected losses that would result from ending the current exchange are high, the vulnerable party will be more constrained from leaving the current exchange relationship. As a result, the party is likely to rely more on the partner for its goal attainment (Frazier, 1983; Geyskens et al., 1999). In this regard, we anticipate that third-party developers’ perception of termination costs can lead to their dependence on the platform.
H9

Termination costs have a positive effect on third-party developers’ dependence on the platform.


3.3. Intermechanism influence: between dependence on the platform and continued intention to develop apps on the platform
Prior research found that in a business–business exchange, a party’s dependence on a partner increased the party’s long-term orientation toward the partner (Ganesan, 1994). This suggests that the dependent party continues to seek its gains through the current exchange relationship because the partner is perceived to be more instrumental than others in its goal attainment. Indeed, the sales and profits obtainable in an exchange relationship are an important factor that determines the extent to which one party becomes dependent on the other (El-Ansary & Stern, 1972; Emerson, 1962; Frazier, Gill, & Kale, 1989). Hence, it is expected that as the dependence level goes up, the dependent party’s goal pursuit through the partner tends to continue. In this regard, we anticipate that In a platform owner—application developer exchange, third-party developers who are dependent on a platform are likely to continue developing new apps in order to gain more profits from that platform.
H10

Dependence on the platform has a positive effect on continued intention to develop apps on the platform.]]>
</section>



    <section name="Methodology" category="methods">
            <![CDATA[
4. Methodology
4.1. Data collection
In order to test the proposed model, we developed a web survey system to collect data from third-party developers who had experience in producing and publishing mobile apps. Our research context is the Apple’s platform where continued participation of third-party developers are seen critical for several reasons. Although Apple’s platform has been recognized as the best place for the developers to make money, Google’s Android platform is gradually closing the gap; moreover, Android platform has already overtaken Apple’s in terms of app downloads (Simon, 2014). In addition, Apple is at a disadvantage than Android in Asia, because of Google’s strategy focusing on massive adoption. An advertisement for the survey including a description of the study and the link to the web survey system was posted to a popular online community of Korean iOS app developers,2 called Mac Bu Gi (http://cafe.naver.com/mcbugi) for two weeks. Despite a relatively slow progress for iOS than Android in South Korea, there are surely a group of developers who consider Apple’s platform for their app development and publishing, and show marked activities. Indeed, South Korea has been recognized as having the most local language apps in the top 25 monthly downloads for the iPhone (Taylor-Gill, 2011). Since our dependent variable is continued participation, the data collected in a barren land has unique value and can provide further insight.
Through the online flyer, participants were told that they would receive a 10 dollar mobile gift card as a reward upon completion of the survey. The advertisement was viewed 981 times over 2 weeks, although the number could include repeat views. A total of 277 members visited our survey site, meaning that at least 28.2% of those who viewed the advertisement clicked through to the survey. Of these click-throughs, 135 (48.7%) actually completed the survey. Thus, conservatively speaking, at least 13.8% of potential respondents completed the survey (although this figure would increase if an individual viewed the advertisement multiple times). Before analysis, 23 responses were excluded, either because they were unreliable or because the respondents were developing but had no actual experience in publishing their apps on Apple’s platform. Finally, we were able to obtain 112 reliable responses.

To calculate a response rate, we refer to the literature (e.g., Ridings, Gefen, & Arinze, 2002) to follow an established procedure using the information of how many times the invitation was viewed and how many surveys were started and completed. We found that 25.9% of developers who accessed the survey website actually provided reliable responses. According to Andrews, Nonnecke, & Preece (2003), this method for calculating a response actually produces better metrics than are typical in online data collection.
4.2. Power analysis
A power analysis was conducted to see if our sample size secures enough statistical power. Statistical power refers to the probability of rejecting H0 when H1 is true, which means the probability that the researcher will find a statistically significant relationship, when the relationship actually exists (Cohen, 1988). Sample size is an important determinant of statistical power because the larger the sample size, the greater the prediction (i.e., the probability of rejecting the false null hypothesis) (Baroudi and Orlikowski, 1989). Our results indicate that the sample size required to maintain statistical power of 0.80 for a medium effect size (f = 0.15) is 92, suggesting that our sample size is appropriate.
4.3. Measures
We adapted existing scales from previous studies. The measures used in this study are shown in Table 1. A 7-point Likert scale was used with “strongly disagree” and “strongly agree” as anchors.
Table 1. Measures.
Construct	Items	Reference
Revenue sharing attractiveness	How the platform owner distributes the revenues from app sales with third-party developers is reasonable	Martin et al. (2009)
The revenue share model of the platform owner is acceptable	
The platform owner’s revenue sharing with third-party developers is attractive	
Market demand	Many people download apps for their Apple products	Kaufman et al. (2006)
Apple product users’ demand for mobile apps is expected to be strong	
The category that mobile apps belong to is growing quickly	
Usefulness of development tools	Using the software development tools offered by the platform owner improves my (our) performance in developing mobile apps run on Apple products	Davis (1989); Bhattacherjee (2001)
Using the software development tools offered by the platform owner increases my (our) productivity in developing mobile apps run on Apple products	
Using the software development tools offered by the platform owner enhances my (our) effectiveness in developing mobile apps run on Apple products	
Usefulness of online forum	Using the online forum supported by the platform owner improves my (our) performance in developing mobile apps run on Apple products	Davis (1989); Bhattacherjee (2001)
Using the online forum supported by the platform owner increases my (our) productivity in developing mobile apps run on Apple products	
Using the online forum supported by the platform owner enhances my (our) effectiveness in developing mobile apps run on Apple products	
Review process fairness	The platform owner’s evaluation of different mobile apps is fair	Martin et al. (2009)
The platform owner’s review process is reasonable	
Review results by the platform owner are usually acceptable, given other similar cases	
Relationship satisfaction	It is a pleasure working with the platform owner	Benton & Maloni (2005); Leuthesser (1997)
The platform owner is a good company to do business with	
The exchange relationship with the platform owner is satisfactory	
Continued intention to develop apps on the platform	I (we) intend to develop mobile apps run on Apple products frequently in the future	Hsieh et al. (2011); Taylor & Todd (1995)
I (we) intend to continue developing mobile apps run on Apple products in the future	
I (we) will continue to develop mobile apps on the Apple platform in the future	
Learning	Learning for mobile app development on the Apple platform took much time and effort	Burnham et al. (2003); Kim & Son (2009)
I (we) spent a lot of time and effort in learning how the Apple platform works	
There was a lot involved for me (us) to clearly understand how to develop mobile apps on the Apple platform	
Setup activity	It took much time for me (us) to go through all the required steps before making a start on developing mobile apps for Apple products	Burnham et al. (2003); Chiou, Wu, & Chuang, 2010; Heide & John (1990)
There were many formalities involved for me (us) to initiate the exchange relationship with the platform owner	
I (we) have made significant investments in physical assets or technical resources dedicated to developing mobile apps run on Apple products	
Termination costs	The potential losses that would result from terminating the exchange relationship with the platform owner are trivial (R)	Morgan & Hunt (1994)
If I (we) no longer develop mobile apps on the Apple platform, the time and effort invested thus far will be wasted	
If I (we) end the exchange relationship with the platform owner, the time and effort I (we) already spent would be much more meaningless than if I (we) continue the exchange relationship	
Dependence on the platform	It would be difficult for me (us) to replace the platform partner (i.e., Apple).	Ganesan (1994)
I (We) am (are) dependent on the platform owner for app sales	
The Apple platform is crucial for my (our) business performance	
Revenue sharing attractiveness was measured using a multi-item scale consisting of three items borrowed from Martin, Ponder, & Lueg (2009). We measured market demand using three items adapted from Kaufman et al. (2006). Usefulness of development tools and usefulness of online forums were measured using scales adapted from Davis (1989) and Bhattacherjee (2001). The review process fairness measure consists of three items borrowed from Martin et al. (2009). To measure learning, we adapted the scales of Kim and Son (2009) to our research context. The setup activity measure consists of three items adapted from Burnham et al. (2003) and Heide and John, (1990). The three relationship satisfaction items were adapted from Benton and Maloni (2005) and Leuthesser (1997). We used three items to measure termination costs, and those items were newly developed based on the definition of the construct in the literature (Nakao, 1980). Continued intention to develop apps on the platform was measured using three items borrowed from Hsieh, Rai, & Keil (2011) and Taylor and Todd (1995). Finally, dependence on the platform was measured using three items that were borrowed from Ganesan (1994).]]>
</section>

        <section name="Data analysis and results" category="results">
            <![CDATA[
5. Data analysis and results
5.1. Demographics
Most of the participants had more than 5 years’ experience working as mobile app developers (65%). Most were between 30 and 39 years old (54.4%) or in their twenties (37.5%). About two thirds of the developers (67%) were not employed in a company; however, there was no significant difference in demographic characteristics between employed and unemployed developers.

Non-response bias was tested by comparing the responses of the early respondents with the late respondents (Armstrong & Overton, 1977). All possible comparisons showed insignificant differences (p < 0.05 level). In addition, Harmon’s one-factor test was conducted to assess common method bias (CMB) in the survey data (Podsakoff & Organ, 1986). A principal component factor analysis was carried out, including on all the principal variables. CMB was not observed in our data as no single factor accounts for a large percentage of the variance of all factors.
5.2. Model testing
Measurement validation and model testing were conducted using partial least squares (PLS), which is a structural equation modeling (SEM) technique that uses a component-based approach to estimation. PLS was deemed more appropriate for this study than other SEM techniques in that the number of variables relative to the sample size is large. PLS places minimal demands on measurement scales, sample size, and distributional assumptions (Chin, 1998; Falk & Miller, 1992; Fornell & Bookstein, 1982; Wold, 1982).
5.2.1. Measurement model
The measurement model was assessed for reliability and validity. For reliability testing, composite reliability (CR) scores were calculated. As shown in Table 2, the CR scores of all multi-item variables were acceptable (0.75–0.99). For testing of convergent validity, loadings and cross-loadings were checked to see whether items were heavily loaded on their intended factors than on other factors (Pavlou & Gefen, 2005). As seen in Table 3, factor loadings were high for all items. According to Barclay, Higgins, & Thompson (1995) and Chin (1998), for convergent validity, item loadings should be at least 0.6. Although the loading of the second item for the setup activity variable is a bit low (0.594), this value is very close to 0.6 and is much higher than any of the cross-loadings. Thus, we did not exclude the item from further analyses.
Table 2. Construct correlations, discriminant validity, and reliability.
CR	AVE	1	2	3	4	5	6	7	8	9	10	11
1. RSAa	0.95	0.86	0.90										
2. MD	0.93	0.82	0.29	0.91									
3. UDT	0.95	0.86	0.26	0.15	0.93								
4. UOF	0.95	0.87	0.25	0.24	0.17	0.93							
5. RPF	0.88	0.72	0.43	0.13	0.22	0.07	0.85						
6. RS	0.85	0.66	0.42	0.41	0.45	0.10	0.35	0.81					
7. CI	0.99	0.97	0.25	0.27	0.30	0.01	0.21	0.49	0.98				
8. LEA	0.91	0.77	−0.17	0.03	−0.31	0.05	−0.15	−0.28	−0.11	0.88			
9. SA	0.75	0.51	−0.14	−0.03	−0.26	0.11	−0.30	−0.18	−0.01	0.53	0.71		
10. TC	0.78	0.55	−0.09	−0.09	−0.17	−0.06	−0.02	0.05	0.09	0.36	0.39	0.74	
11. DP	0.89	0.74	0.23	0.09	0.11	−0.03	0.11	0.23	0.31	0.01	0.07	0.33	0.86
Notes: RSA, revenue-sharing attractiveness; MD, market demand; UDT, usefulness of development tools; UOF, usefulness of online forum; RPF, review process fairness; RS, relationship satisfaction; CI, continued intention to develop apps on the platform; LEA, learning; SA, setup activity; TC, termination costs; DP, dependence on the platform.

Table 3. Factor loadings and cross-loadings.
RSA	MD	UDT	UOF	RPF	RS	CI	LEA	SA	TC	DP
RSA1	0.93	0.23	0.25	0.24	0.39	0.36	0.20	−0.18	−0.13	−0.09	0.19
RSA2	0.91	0.18	0.18	0.14	0.36	0.34	0.22	−0.12	−0.13	−0.04	0.27
RSA3	0.94	0.37	0.27	0.30	0.44	0.45	0.25	−0.18	−0.13	−0.11	0.20
MD1	0.31	0.94	0.13	0.22	0.15	0.39	0.19	−0.02	−0.06	−0.15	0.04
MD2	0.30	0.94	0.15	0.24	0.14	0.39	0.24	0.06	−0.05	−0.07	0.08
MD3	0.15	0.83	0.13	0.18	0.05	0.31	0.32	0.06	0.06	−0.02	0.12
UDT1	0.21	0.14	0.93	0.13	0.24	0.47	0.32	−0.26	−0.27	−0.12	0.09
UDT2	0.29	0.16	0.95	0.16	0.18	0.40	0.24	−0.34	−0.27	−0.21	0.13
UDT3	0.22	0.12	0.90	0.18	0.18	0.35	0.27	−0.27	−0.19	−0.14	0.09
UOF1	0.22	0.16	0.09	0.91	0.06	0.03	−0.02	0.11	0.16	−0.03	−0.04
UOF2	0.20	0.15	0.12	0.89	0.05	0.00	−0.06	0.09	0.11	−0.04	−0.04
UOF3	0.26	0.25	0.18	0.99	0.07	0.11	0.02	0.03	0.09	−0.07	−0.02
RPF1	0.42	0.14	0.23	0.10	0.96	0.39	0.21	−0.17	−0.28	−0.01	0.15
RPF2	0.36	0.16	0.19	0.13	0.91	0.29	0.19	−0.12	−0.23	−0.06	0.01
RPF3	0.30	−0.01	0.12	−0.15	0.65	0.17	0.10	−0.07	−0.25	0.02	0.14
RS1	0.52	0.33	0.31	0.23	0.39	0.76	0.34	−0.20	−0.22	0.03	0.09
RS2	0.23	0.30	0.47	−0.02	0.24	0.85	0.50	−0.34	−0.16	0.01	0.24
RS3	0.28	0.37	0.29	0.04	0.23	0.81	0.35	−0.12	−0.05	0.10	0.23
CI1	0.25	0.26	0.31	0.01	0.20	0.48	0.99	−0.13	−0.02	0.10	0.29
CI2	0.24	0.29	0.29	0.01	0.22	0.51	0.98	−0.10	−0.03	0.09	0.33
CI3	0.24	0.25	0.28	0.00	0.19	0.47	0.98	−0.10	0.01	0.09	0.29
LEA1	−0.07	0.04	−0.22	0.16	−0.12	−0.22	−0.05	0.92	0.48	0.32	−0.02
LEA2	-0.14	0.04	−0.32	0.12	−0.11	−0.27	−0.10	0.91	0.46	0.28	0.02
LEA3	−0.23	0.01	−0.28	−0.13	−0.16	−0.25	−0.14	0.80	0.45	0.34	0.02
SA1	−0.13	0.13	−0.22	0.18	−0.27	−0.15	−0.06	0.52	0.71	0.19	−0.02
SA2	−0.14	−0.02	−0.20	0.08	−0.21	−0.27	−0.11	0.26	0.59	0.19	0.16
SA3	−0.07	−0.09	−0.18	0.03	−0.20	−0.06	0.06	0.39	0.82	0.39	0.03
TC1	−0.11	−0.04	−0.18	−0.09	−0.03	0.10	0.06	0.30	0.27	0.83	0.24
TC2	−0.26	−0.18	−0.31	−0.03	−0.14	−0.17	−0.12	0.37	0.50	0.72	−0.01
TC3	0.16	0.02	0.11	−0.02	0.12	0.19	0.26	0.13	0.10	0.66	0.49
DP1	0.20	0.09	0.03	−0.03	0.10	0.19	0.21	−0.04	0.08	0.31	0.90
DP2	0.20	−0.02	0.09	−0.11	0.06	0.12	0.28	0.10	0.07	0.38	0.89
DP3	0.22	0.20	0.20	0.11	0.15	0.35	0.31	−0.08	0.01	0.11	0.78
Notes: RSA, revenue-sharing attractiveness; MD, market demand; UDT, usefulness of development tools; UOF, usefulness of online forum; RPF, review process fairness; RS, relationship satisfaction; CI, continued intention to develop apps on the platform; LEA, learning; SA, setup activity; TC, termination costs; DP, dependence on the platform.

To ensure adequate discriminant validity, the square root of the average variance extracted (AVE) score of each variable should be larger than its correlations with other latent variables (Chin, 1998; Fornell & Larcker, 1981; Gefen & Straub, 2005). We found that the square roots of all AVE scores (diagonal elements in Table 2) were much greater than all other cross-correlations (off-diagonal elements). In sum, our measures were considered to be appropriate for the testing of the research model.
5.2.2. Structural model
Bootstrapping was performed to test the structural significance of the path coefficients (Chin, 1998). Fig. 2 presents the results. Overall, the PLS analyses generally confirmed the main ideas of the dual model framework. The dedication- and constraint-based mechanisms were found to coexist in a platform owner—application developer exchange and they affected third-party developers’ continued participation differently.
Results of data analysis
Download full-size image
Fig. 2. Results of data analysis.
All of our hypotheses except H4 were supported. Specifically, revenue sharing attractiveness and market demand were found to influence third-party developers’ relationship satisfaction positively (β = 0.20, t = 2.14, p < 0.05, H1; β = 0.30, t = 3.59, p < 0.01, H2). Our results also reveal that usefulness of development tools provided by the platform owner has a significant positive influence on third-party developers’ relationship satisfaction (β = 0.33, t = 3.37, p < 0.01, H3).
Contrary to our expectation, however, the usefulness of online forums supported by the platform owner did not significantly affect third-party developers’ relationship satisfaction (β = −0.09, t = 1.04, H4 not supported). This result needs further examination because in many cases, online forum is reportedly one of the best places to interact with peers and seek relevant advice or knowledge (Chiu et al., 2006). Some clues from follow-up interviews with survey participants indicated that in order to address technological problems in the process of app development, many developers simply used search engines such as Google, because search engines allow faster information search without additional memberships. Another possible reason is that most participants in this study were skilled developers with several years of experience. Due to their accumulated expertise, they may not have had the need to visit the official online forum to seek help from others. To validate these possible interpretations, however, further investigations are required.
Next, review process fairness was found to affect third-party developers’ relationship satisfaction positively, although the impact was moderate (β = 0.16, t = 1.83, p < 0.1, H5). This finding basically explains that examining the app evaluation process, third-party developers can recognize the extent to which the platform owner follows the fairness norm as strictly as they expect; accordingly, their satisfaction of working with the platform owner can change. However, in our interviews, some developers reported confusion about why their apps were sometimes rejected when other, similar apps had been accepted and sold on the platform. Hence, the marginal significance may have been related to the developers’ mixed experiences with the review process. However, further empirical investigations are required to improve our understanding of the impact of review process fairness on developer satisfaction.
In support of the last hypothesis concerning the dedication mechanism, relationship satisfaction was found to have a significant positive impact on continued intention to develop apps on the platform (β = 0.45, t = 5.43, p < 0.01, H6).
The PLS results also revealed significant support for the hypothesized effects of the constraint-based factors. Specifically, the extent of learning about the platform was found to have a positive influence on third-party developers’ perception of termination costs (β = 0.21, t = 2.15, p < 0.05, H7). The extent of setup activity was also proven to have a significant effect on third-party developers’ perception of termination costs (β = 0.28, t = 2.74, p < 0.01, H8). Moreover, in support of H9, our results revealed that termination costs positively affected third-party developers’ dependence on the platform (β = 0.33, t = 1.96, p < 0.05, H9). Finally, as expected, dependence on the platform was found to positively affect third-party developers’ continued intention to develop apps on the platform (β = 0.20, t = 2.49, p < 0.05, H10).
5.3. Supplementary analysis
In order to ensure the validity of our dual model further, we performed additional analyses. Specifically, we tested the effects of factors in one mechanism on the factors in the other mechanism, by linking the benefit variables to termination costs and the investment variables to relationship satisfaction. For the same purpose, paths were also drawn between relationship satisfaction and dependence on the platform, and between termination costs and continued intention to develop apps on the platform. As shown in Table 4, the newly added paths were not statistically significant at the p < 0.05 level, thus supporting the theoretical idea of the dual model framework that the two mechanisms exhibit highly discernible patterns with few linkages.
Table 4. Results of supplement analysis.
Controlled relationship	T-value
Revenue-sharing attractiveness → termination costs	0.04
Market demand → termination costs	0.03
usefulness of development tools → termination costs	0.98
Usefulness of online forum → termination costs	0.71
Review process fairness → termination costs	1.14
Learning → relationship satisfaction	1.80
Setup activity → relationship satisfaction	0.35
Relationship satisfaction → dependence on the platform	1.38
Termination costs → continued intention to develop apps on the platform	0.06]]>
</section>

    <section name="Concluding remarks" category="conclusion">
        <![CDATA[
6. Concluding remarks
6.1. Contributions
The recent proliferation of platform-centric ecosystems allows platform owners to harness the expertise of third-party developers for the supply of platform-specific add-on software in order to meet their hardware product users’ needs for diverse functionalities. Despite the important role of third-party developers and the popularity of their add-on software offerings, there is a dearth of empirical research that provides a deep understanding of third-party developers’ choice to continue participating in a platform-centric ecosystem established by a respective platform owner.

This paper contributes to the growing literature on platform-centric ecosystems and the mobile services industry by providing theoretical knowledge about what leads third-party developers to continue affiliation with a particular platform (i.e., continued participation) and perpetuate their exchange relationships with the platform owner.

From the theoretical point of view, our dual model explains two different forces underlying third-party developers’ continued participation: the mechanism increasing third-party developers’ dedication to a particular platform, and the other mechanism constraining them from leaving the platform. In our dual model, the former mechanism describes an active form of continued participation, which is characterized with relationship benefits, favorable affective responses (i.e., relationship satisfaction), and repeated use (i.e., continued intention to develop apps on the platform). In contrast, the latter mechanism explains a passive form of continued participation that is characterized with relationship-specific investment, perceived potential losses that would result from leaving that platform (i.e., termination costs), and dependence on the platform. Our results show that these two distinct mechanisms work simultaneously, suggesting that understanding about third-party developers’ continued participation in a particular platform should be interpreted from both perspectives.
In addition, we offered theoretical understanding of specific relationship benefits that lead to third-party developers’ dedication to a platform. Our model explains that the developers’ dedication can be increased by three different types of relationship benefits: economic benefits (e.g., revenue share model, market demand), resource benefits (e.g., development tools as technological resources, online forum as informational resources), and social and cultural benefits (e.g., fairness in the process of app evaluation). Using these categories of relationship benefits, future researchers may extend our work to better understand what other important benefit factors can increase third-party developers’ satisfaction and lead them to remain in a particular platform for a long time.
In light of this, we also extended the literature on business relationship satisfaction to the context of mobile platform-based business by identifying and validating the predictors of third-party developers’ satisfaction with a respective platform. Relationship satisfaction is one of the most effective indicators to measure a party’s a long-term orientation toward the other party (Abdul-Muhmin, 2002). Prior studies have suggested that two broad categories of factors affect relationship satisfaction (Schellhase et al., 2000). The first category includes a set of instrumental factors, such as product/service offering, pricing, salesforce, support, and logistics, which help improve a partner’s business performance. The other category consists of interpersonal relationship factors. In the context of a platform owner—application developer exchange, this study adds to the literature that revenue share model, market demand, development tools, and review process of the platform owner are those factors affecting the developers’ performance, thereby increasing their long-term orientation toward a respective platform.
Our paper also provides theoretical understanding of relationship-specific investments that increase constraints that make it difficult for third-party developers to leave a current platform. Studies on interorganizational exchange have suggested that investments in a particular relationship often cannot be redeployed in other, alternative relationships (Heide & John, 1998; Williamson, 1981), creating constraints for the investing party on termination of the relationship (Ganesan, 1994). Building on this literature, our results suggest that third-party mobile app developers will perceive higher termination costs, if the extent of learning and setup activity already performed on a platform is substantial.
In the literature, learning and setup activity in an exchange relationship have been conceptualized in two different ways: as the expected future costs for a new alternative relationship in the situation of switching (e.g., Burnham et al., 2003; Jones et al., 2002); and as the investments already made to the relationship with the current partner (e.g., Kim & Son, 2009). Our study provides empirical evidence that third-party mobile app developers’ learning and setup activities make it difficult for them to end the exchange relationship with a current platform partner—that is, the latter case.
Next, we also empirically tested the role of termination costs in the context of the platform owner—application developer exchange. The concept of termination costs differs from that of switching costs. Whereas the latter presumes that a party always searches for another new partner when it considers terminating the exchange relationship with a current partner, the former focuses on the issue of terminating the existing relationship mainly. Hence, the notion of termination cost can better explain the constraining effect of the investments already made for the current exchange (i.e., relationship-specific investment). Nevertheless, the notion of termination cost has received little attention from IS researchers. Future researchers may use this variable to better understand what other significant constraints prevent relationship dissolution (i.e., leaving a current platform) by third-party mobile app developers.
Our study also adds a new knowledge to the literature on dependence. Prior studies have mainly focused on dependence structures between exchange parties (e.g., interdependency, dependence asymmetry) and examined their influences on exchange relationships and outcomes (Palmatier et al., 2006, 2007). However, there is a dearth of research that examines dependence as a behavioral outcome in an exchange relationship. We fill this gap in this study. Specifically, in the context of the platform owner—application developer exchange, our results provide the new knowledge that dependence on an exchange partner is affected by the perception of termination cost. This suggests that dependence is considered to be a constraint-based behavioral outcome that demonstrates a passive form of relationship continuance, differing from dedication-based behavioral outcomes characterizing advocacy.
This study also has important practical implications. In some industries, such as the mobile services domain, where platform-centric ecosystems create new value for customers, competition is no longer product-based, but platform-based (Baldwin & Clark, 2000; Garud et al., 2003). Hence, platform owners must continuously leverage outside expertise and ingenuity by effectively managing exchange relationships with third-party developers. Nevertheless, only little knowledge has been available for platform owners to understand how to encourage third-party developers to continue to participate in their platform-centric ecosystems. Our work in this paper responds to this need from the field.
Specifically, our findings suggest that platform owners can enhance third-party developers’ dedication to their platforms in several ways. They may draw up or change strategy in terms of economic, instrumental, and social benefits for third-party developers. Firstly, platform owners may amend or diversify their revenue share models so that third-party developers can anticipate more economic benefits from continuous participation. Secondly, platform owners may offer advanced software development tools to help the development process and provide instrumental benefit (or resource benefit). Some studies have argued that the availability of development tools may lead to third-party developers’ affiliation with more than one platform by making the development process easy (e.g., Tiwana et al., 2010). However, our results reveal that the development tools offered by a particular platform owner can actually increase third-party developers’ dedication to the respective platform. One possible reason is that different mobile platforms use dissimilar operating systems. Therefore, the validity of the early argument may vary depending on the types of platforms (e.g., mobile platforms, software platforms). Lastly, platform owners may improve the review process to appeal favorably to third-party developers, who are generally at a disadvantage in the exchange relationship. By establishing objective standards and making the procedure more transparent, platform owners can provide the social and cultural benefit to a greater extent, and position themselves as a better partner. In sum, our study suggests that all these strategies can increase active, continued participation of the developers, which may ultimately lead to an increased number of third-party software offerings and the success of platform-centric ecosystems.
In addition to the benefit-based strategy, platform owners may strategically impose relationship-specific investments (e.g., learning) on third-party developers in order to induce a passive form of continuous participation. In fact, one of the critical concerns of platform owners is securing an exclusive supply of attractive software offerings among competitive platforms (Mantena, Sankaranarayanan, & Viswanathan, 2010). Regarding this, our results suggest that a platform owner must make its own platform dissimilar from those of competitors in terms of the code base, so that learning about the platform is truly platform-specific. Then, third-party developers who want to continue affiliations with more than one platform must cope with so-called multihoming costs—costs of adopting and operating on more than one platform (Armstrong and Wright, 2007). In contrast, if a platform is technologically similar to other platforms, third-party developers may spend less time and effort learning about it; accordingly, they may be less sensitive to the potential losses that would result from leaving the platform. As a result, the developers may be less dependent on the platform.
Indeed, platform-based ecosystems are now pervasive in many other software contexts, such as Web browsers and social media. For example, Firefox users may benefit from not only the browser itself, but also add-on extensions that offer various features, such as sidebar functionality and comparison shopping. Facebook also opened its platform to the public, making it possible for third-party developers to provide new apps for Facebook users (Gnyawali, Fan, & Penner, 2010). In these other contexts, third-party developers’ continuous participation is also important to the success of platform owners. Hence, our practical implications are not limited only to the mobile services domain but may be applied to other platforms.
6.2. Limitations and future research
Amidst the strengths of this paper, there are some limitations. Firstly, our sample size is small, and thus our results are not based on a model-fit analysis. However, we used an analysis method suitable for developing a theoretical model with a small or medium sample. Moreover, the results of power analysis indicated that our sample size did not threaten the statistical power. In addition to this, the general convention that the sample size should be more than 10 times the largest number of structural paths directed at a particular construct was also satisfied (Chin, Marcolin, & Newsted, 2003).
Next, in this study, we offered the monetary rewards based on the literature to increase response rates (Church, 1993); however, a preliminary check for the appropriateness of the incentives was conducted less carefully. Some researchers argue that there is no good evidence for how large an incentive should be, and no empirical support for decline in data quality has been found (Singer & Ye, 2013). However, the literature on survey methodology apparently suggests that the best practices to avoid any potential problems, such as impacts on data quality, include conducting several pretests before choosing the types and the amount of incentives (Singer & Ye, 2013).
In addition, the contributions of this study may be limited by the fact that a single platform (i.e., Apple’s platform) was only considered from which to examine third-party developers’ perspectives. However, the top two mobile platforms (i.e., iOS platform, Android platform) take quite different strategic approaches from each other; Apple holds onto the premium market, leading on revenue, while Android platform has a vast consumer base, stretching from cheap to high-end devices. Hence, understandings on each platform are necessary before drawing a general knowledge. Moreover, comparing multiple platforms in terms of the factors influencing third-party developers’ continued participation is beyond the scope of this study.

In this study, we mainly examined what factors lead to third-party developers’ continued participation in a platform-centric ecosystem established by a respective platform owner. However, the degree of continued participation alone may not directly explain which platform is more powerful than others and may not be able to predict who will be the winner in platform competition. For these other interesting aspects, understanding the characteristics of continued participation and platform comparisons from this detailed point of view are further required. Future researchers may take this opportunity by using a network perspective. Specifically, investigations of the network structure of a platform’s ecosystem (Srinivasan & Venkatraman, 2010) may improve understandings on how the success of a platform ecosystem is determined by what developers choose to work in, and how many and how different developers participate continuously. This method using objective data can also minimize the limitation of self-reported survey data.
Lastly, another limitation and potential opportunity for future research is that the relevance and theoretical contribution of our research model could be more improved, if the nature of the mobile apps market such as digital disruption (Nault & Vandenbosch, 2000) is considered together with the two, dedication- and constraint-based mechanisms.3 Indeed, third-party developers’ continued choice of a mobile platform can be affected not only by the two mechanisms that are truly internal to the current relationship (with the platform partner), but also by external situations such as whether an alternative competitive platform that may be equipped with disruptive technologies has been (newly) available. For example, what if Samsung, the top Android contributor, launched its own mobile operating systems with disruptive technologies and started to build its own platform ecosystem targeting the premium market? Then, third-party developers who only considered Apple’s platform might behave differently from the ways presented in this study. For example, their decisions on continued participation in the existing platform may be influenced by the extent to which the nature of competition among the platforms has been changed by the new competitor (or its disruptive technologies and services). Moreover, other existing platform providers such as Google can also lead to such a structural change with their own disruptive technological innovations. In either of the cases, our model needs to consider the external influences in addition to the two internal factors (i.e., dedications and constraints) to provide more relevant implications.]]>
</section>

</publication>